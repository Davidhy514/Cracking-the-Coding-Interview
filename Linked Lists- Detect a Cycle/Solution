"""
Detect a cycle in a linked list. Note that the head pointer may be 'None' if the list is empty.

A Node is defined as: 
 
    class Node(object):
        def __init__(self, data = None, next_node = None):
            self.data = data
            self.next = next_node
"""


def has_cycle(head):
    pass
    if(head == None):
        return (0)
    next1 = head.next
    if(next1 == None):
        return (0)
    next2 = next1.next
    while(next1 != None or next2 != None):
        if(next1.data == next2.data):
            return (1)
    return (0)
